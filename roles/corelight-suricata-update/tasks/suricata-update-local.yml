---
- name:             "suricata-update-local: Install Suricata-update dependencies"
  pip:
    name:           pyyaml
    executable:     pip3
  environment:
    http_proxy:     "{{ http_proxy_env | default() }}"
    https_proxy:    "{{ https_proxy_env | default() }}"

- name:             "suricata-update-local: Install Suricata-update"
  pip:
    name:           suricata-update
    state:          latest
    executable:     pip3
    extra_args:     --user --upgrade --upgrade-strategy only-if-needed
  become:           no
  environment:
    http_proxy:     "{{ http_proxy_env | default() }}"
    https_proxy:    "{{ https_proxy_env | default() }}"

# Find Suricata-update and make sure it's in the $PATH
- name:             "suricata-update-install: Find Suricata-update location"
  find:
    paths:          /
    recurse:        yes
    file_type:      file
    patterns:       suricata-update
  become:           yes
  register:         suricata_full_path
  changed_when:     false

- name:             "suricata-update-install: Create suricata_path fact"
  set_fact:
    suricata_path:  "{{ suricata_full_path.files[0] | string | dirname | regex_replace('^[^/]*(.*)$', '\\1') }}"

- name:             "suricata-update-install: Make sure Suricata-update is in the non-interactive PATH"
  lineinfile:
    dest:           "/etc/environment"
    state:          present
    regexp:         '^(PATH=\")({{ suricata_path }}:)?((?(2).*?(?!(?:.\"))|.*?(?!(?:{{ suricata_path }}))))(:{{ suricata_path }})?((?(4).*|\"))'
    line:           '\1\3:{{ suricata_path }}\5'
    backrefs:       yes

- name:             "suricata-update-install: Make sure Suricata-update is in the secure_path"
  lineinfile:
    dest:           "/etc/sudoers"
    state:          present
    regexp:         '^(Defaults\s*secure_path=\")({{ suricata_path }}:)?((?(2).*?(?!(?:.\"))|.*?(?!(?:{{ suricata_path }}))))(:{{ suricata_path }})?((?(4).*|\"))'
    line:           '\1\3:{{ suricata_path }}\5'
    backrefs:       yes
    validate:       /usr/sbin/visudo -cf %s

- name:             "suricata-update-local: Make sure Suricata-update path exists"
  file:
    path:           "{{ suricata_update_path }}"
    state:          directory
    mode:           '0755'
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"

- name:             "suricata-update-local: Create Suricata-update config"
  template:
    src:            suricata-update.yaml.j2
    dest:           "{{ suricata_update_path }}/update.yaml"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"

- name:             "suricata-update-local: Create Suricata-update disable config"
  template:
    src:            suricata-update-disable.conf.j2
    dest:           "{{ suricata_update_path }}/disable.conf"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"

- name:             "suricata-update-local: Create Suricata-update enable config"
  template:
    src:            suricata-update-enable.conf.j2
    dest:           "{{ suricata_update_path }}/enable.conf"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"

- name:             "suricata-update-local: Create Suricata-update modify config"
  template:
    src:            suricata-update-modify.conf.j2
    dest:           "{{ suricata_update_path }}/modify.conf"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"

- name:             "suricata-update-local: Copy Suricata Custom Rule files to sensor"
  copy:
    src:            "../../../common/files/suricata_custom_rules/"
    dest:           "{{ suricata_custom_rules_path }}"
    mode:           0644
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
  register:         results10

- debug:
    var:            results10.stdout_lines

- name:             "suricata-update-local: Update Suricata-update Sources"
  shell:            suricata-update update-sources -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  changed_when:     false
  become:           no
  environment:
    http_proxy:     "{{ http_proxy_env | default() }}"
    https_proxy:    "{{ https_proxy_env | default() }}"

- name:             "suricata-update-local: Collect list of enabled sources"
  shell:            suricata-update list-enabled-sources -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  register:         enabled_sources
  changed_when:     false
  become:           no

- debug:
    var:            enabled_sources.stdout_lines

- name:             "suricata-update-local: Enable remote sources with secret-codes"
  shell:            suricata-update enable-source "{{ item.name }}" secret-code="{{ item.secret_code }}" -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  with_items:       "{{ enable_suricata_secret_code_sources|default([]) }}"
  when:             'item.name not in enabled_sources.stdout'
  no_log:           true
  become:           no
  register:         results4

- debug:
    var:            results4.stdout_lines

- name:             "suricata-update-local: Enable remote sources without secret-codes"
  shell:            suricata-update enable-source "{{ item }}" -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  with_items:       "{{ enable_suricata_remote_sources|default([]) }}"
  when:             'item not in enabled_sources.stdout'
  become:           no
  register:         results5

- debug:
    var:            results5.stdout_lines

- name:             "suricata-update-local: Enable remote sources not in the index"
  shell:            suricata-update add-source "{{ item.name }}" "{{ item.url }}" -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  with_items:       "{{ enable_suricata_custom_url_sources|default([]) }}"
  when:             'item.name not in enabled_sources.stdout'
  become:           no
  register:         results6

- debug:
    var:            results6.stdout_lines

- name:             "suricata-update-local: Remove Suricata-update remote sources tasks"
  include_tasks:    suricata-update-remove-source.yml
  loop:             "{{ enabled_sources.stdout_lines | select('match', '^  - [a-z]') | list | regex_replace('  - ') }}"
  when:
    - 'item not in (enable_suricata_remote_sources|default([])|string)' 
    - 'item not in (enable_suricata_secret_code_sources|default([])|string)'
    - 'item not in (enable_suricata_custom_url_sources|default([])|string)'
  register:         results7

- debug:
    var:            results7.stdout_lines

# Suricata-update
- name:             "suricata-update-local: Run Suricata-update"
  shell:            suricata-update --no-reload --no-test -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  become:           no
  register:         results8
  environment:
    http_proxy:     "{{ http_proxy_env | default() }}"
    https_proxy:    "{{ https_proxy_env | default() }}"

- debug:
    var:            results8.stdout_lines

- name:             "suricata-update-local: Copy Suricata-update Rules to Corelight-Suricata Rule folder"
  copy:
    remote_src:     yes
    src:            "{{ suricata_update_path }}/rules/suricata.rules"
    dest:           "{{ suricata_rule_path }}"
    mode:           0644
  register:         results9

- debug:
    var:            results9.stdout_lines
