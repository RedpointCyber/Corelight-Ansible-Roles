---
- name:             "suricata-update-config: Create Suricata-update config"
  template:
    src:            suricata-update.yaml.j2
    dest:           "{{ suricata_update_path }}/update.yaml"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
    mode:           '0755'

- name:             "suricata-update-config: Create Suricata-update disable config"
  template:
    src:            suricata-update-disable.conf.j2
    dest:           "{{ suricata_update_path }}/disable.conf"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
    mode:           '0755'

- name:             "suricata-update-config: Create Suricata-update enable config"
  template:
    src:            suricata-update-enable.conf.j2
    dest:           "{{ suricata_update_path }}/enable.conf"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
    mode:           '0755'

- name:             "suricata-update-config: Create Suricata-update modify config"
  template:
    src:            suricata-update-modify.conf.j2
    dest:           "{{ suricata_update_path }}/modify.conf"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
    mode:           '0755'

# find existing custom rule files
- name:             "suricata-update-config: collect list of existing custom rules"
  find:
    paths:          "{{ suricata_custom_rules_path }}"
    file_type:      file
    patterns:       '*.rules'
  register:         existing_rule_file_list

- name:             "suricata-update-config: Write rule file list to a file"
  template:
    src:            "remove-rule-file-list.j2"
    dest:           "{{ role_path }}/vars/remove-rule-file-list.json"
    mode:           0644
  delegate_to:      localhost
  changed_when:     false

# find new custom rule files
- name:             "suricata-update-config: collect list of custom rules"
  find:
    paths:          "{{ role_path }}/../../common/files/suricata_custom_rules/"
    file_type:      file
    patterns:       '*.rules'
  register:         custom_rule_file_list
  delegate_to:      localhost

- name:             "suricata-update-config: Write custom rule file list to a file"
  template:
    src:            "custom-rule-file-list.j2"
    dest:           "{{ role_path }}/vars/custom-rule-file-list.json"
    mode:           0644
  delegate_to:          localhost

- name:             "suricata-update-config: Include custom rule file vars"
  include_vars:
    file:           "{{ role_path }}/vars/custom-rule-file-list.json"

# remove unused custom rules
- name:             "suricata-update-config: clean up remove list"
  lineinfile:
    path:           "{{ role_path }}/vars/remove-rule-file-list.json"
    regexp:         "^(.*){{ item.name }}$"
    state:          absent
  with_items:       "{{ custom_rule_files }}"
  changed_when:     false
  delegate_to:      localhost
  when:             custom_rule_files is defined

- name:             "suricata-update-config: Include remove unused custom rules vars"
  include_vars:
    file:           "{{ role_path }}/vars/remove-rule-file-list.json"

- name:             "suricata-update-config: Remove unused custom rules files"
  file:
    path:           "{{ item }}"
    state:          absent
  with_items:       "{{ remove_rule_files }}"
  when:             remove_rule_files is defined

# copy custom rules to suricata host
- name:             "suricata-update-config: Copy Suricata Custom Rule files to suricata host"
  copy:
    src:            "../../../common/files/suricata_custom_rules/{{ item.name }}"
    dest:           "{{ suricata_custom_rules_path }}"
    mode:           0644
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
  with_items:       "{{ custom_rule_files }}"
  register:         results
  when:             custom_rule_files is defined

- name:             "suricata-update-config: Update Suricata-update Sources"
  shell:            suricata-update update-sources -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}" --no-check-certificate
  changed_when:     false
  become:           no
  environment:
    http_proxy:     "{{ http_proxy_env | default() }}"
    https_proxy:    "{{ https_proxy_env | default() }}"

- name:             "suricata-update-config: Collect list of enabled sources"
  shell:            suricata-update list-enabled-sources -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  register:         enabled_sources
  changed_when:     false
  become:           no

- name:             "suricata-update-host: List of enabled sources"
  debug:
    var:            enabled_sources.stdout_lines

- name:             "suricata-update-config: Enable remote sources with secret-codes"
  shell:            suricata-update enable-source "{{ item.name }}" secret-code="{{ item.secret_code }}" -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  with_items:       "{{ enable_suricata_secret_code_sources|default([]) }}"
  when:             'item.name not in enabled_sources.stdout'
  no_log:           true
  become:           no
  register:         results4

- debug:
    var:            results4.stdout_lines

- name:             "suricata-update-config: Enable remote sources without secret-codes"
  shell:            suricata-update enable-source "{{ item }}" -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  with_items:       "{{ enable_suricata_remote_sources|default([]) }}"
  when:             'item not in enabled_sources.stdout'
  become:           no
  register:         results5

- debug:
    var:            results5.stdout_lines

- name:             "suricata-update-config: Enable remote sources not in the index"
  shell:            suricata-update add-source "{{ item.name }}" "{{ item.url }}" -c "{{ suricata_update_path }}/update.yaml" -D "{{ suricata_update_path }}"
  with_items:       "{{ enable_suricata_custom_url_sources|default([]) }}"
  when:             'item.name not in enabled_sources.stdout'
  become:           no
  register:         results6

- debug:
    var:            results6.stdout_lines

- name:             "suricata-update-config: Remove Suricata-update remote sources tasks"
  include_tasks:    suricata-update-remove-source.yml
  loop:             "{{ enabled_sources.stdout_lines | select('match', '^  - [a-z]') | list | regex_replace('  - ') }}"
  when:
    - 'item not in (enable_suricata_remote_sources|default([])|string)' 
    - 'item not in (enable_suricata_secret_code_sources|default([])|string)'
    - 'item not in (enable_suricata_custom_url_sources|default([])|string)'
  register:         results7

- debug:
    var:            results7.stdout_lines
