---
ansible_connection:                     ssh

# fleet_managed true or false
fleet_managed:                          false
fleet_ip:
UID:

### Cron Job Variables ###
# To enable the cron job on any system other than localhost,
# the target system MUST have 'suricata_update_enable' set to 'local'.
only_perform_cron_job_tasks:            false     # true or false, if set to true Suricata-update will not run

perform_cron_job_tasks:                 true      # if enabled, will enable or disable a cron job and configure the cron job host

# For cron_job_host, ONLY USE 'localhost' when Ansible and the cron job are local and Suricata-update is on a remote host
cron_job_host:                          localhost # name of the group or name of a host
enable_cron:                            false     # true or false, enables or disables the cron job
cron_job_hour:                          "0"       # 0-23
cron_job_minute:                        "0"       # 0-59
cron_job_target:                        all       # name of the group or host sensor for Suricata-update

cron_job_log_path:                      "/var/log/suricata_update"

# required settings for coping the files to a remote cron job host
secrets_path:                           "../../../common/secrets.yml"
inventory_path:                         "../../../common/inventory.yml"
main_vars_path:                         "../../../common/main-vars.yml"

#### Suricata Variables ####
# Corelight-Suricata Settings
suricata_enable:                        false

# Suricata Settings
suricata_rule_path:                     /etc/corelight/rules
# Place holder for suricata versions used with suricata-update
suricata_versions:                      []

#### Suricata-update Variables ####

# Use Suricata-update should be set in the inventory file for each sensor.
# If it's not listed, the default will apply.
# options are:
# local = use suricata-update in this ansible role
# remote = use suricata-update from another source
# false = don't use suricata-update
suricata_update_enable:                 false

# What sensor do you want Suricata-update to run on?
# List the a single host name to run Suricata-update on for all sensors set to remote
# DO NOT USE 'localhost' AS THE suricata_update_host, instead list the host name in the 
# inventory file and set 'ansible_connection: local'
suricata_update_host:

# Path to Suricata-update config and rule files
suricata_update_path:                   /etc/corelight/suricata-update

# Custom rules will be placed in suricata_custom_rules_path
# Suricata-update will collect the custom rules and combine them with the downloaded rules

# Path to custom Suricata rules for Suricata-update
suricata_custom_rules_path:             /etc/corelight/suricata-update/custom-rules

#### Suricata-update rule sources (in addition to the custom rules).

# Enable Suricata-update remote rule sources (that require a secret-code)
# current list:
# et/pro
# scwx/enhanced
# scwx/malware
# scwx/security

## This list should be in a secrets.yml file as a library
# enable_suricata_secret_code_sources:
#  - name:        "et/pro"
#    secret_code:  "xxxxxxxxxx"

# Suricata-update remote rule sources (that do not require a secret-code)
# current list:
# et/open
# oisf/trafficid
# ptresearch/attackdetection
# sslbl/ssl-fp-blacklist
# sslbl/ja3-fingerprints
# etnetera/aggressive
# tgreen/hunting
# enable_suricata_remote_sources:
#  - 'sslbl/ssl-fp-blacklist'
#  - 'et/open'

# Suricata-update custom remote rule sources (not published through suricata-update index)
# The URL can point to a compressed ruleset or directly to the rules.
# Do not included spaces in the name.
# example:
# enable_suricata_custom_url_sources:
#  - name: 'abuse.ch-URLhaus-IDS'
#    url: 'https://urlhaus.abuse.ch/downloads/urlhaus_suricata.tar.gz'
#  - name: "mylist1"
#    url: 'https://url/list.rules'

# Suricata-update disable.conf
    # Example of disabling a rule by signature ID (gid is optional).
    # 1:2019401
    # 2019401

    # Example of disabling a rule by regular expression.
    # - All regular expression matches are case insensitive.
    # re:heartbleed
    # re:MS(0[7-9]|10)-\d+

    # Examples of disabling a group of rules.
    # group:emerging-icmp.rules
    # group:emerging-dos
    # group:emerging*
    # example:

# disable_rules:
#   - 2019401
#   - re:heartbleed
#   - group:emerging*

# Suricata-update enable.conf
    # Example of enabling a rule by signature ID (gid is optional).
    # 1:2019401
    # 2019401

    # Example of enabling a rule by regular expression.
    # - All regular expression matches are case insensitive.
    # re:heartbleed
    # re:MS(0[7-9]|10)-\d+

    # Examples of enabling a group of rules.
    # group:emerging-icmp.rules
    # group:emerging-dos
    # group:emerging*

# enable_rules:
#   - 2019401
#   - re:heartbleed
#   - group:emerging*

# Suricata-update modify.conf
    # Format: <sid> "<from>" "<to>"

    # Example changing the seconds for rule 2019401 to 3600.
    #2019401 "seconds \d+" "seconds 3600"

    # Change all trojan-activity rules to drop. Its better to setup a
    # drop.conf for this, but this does show the use of back references.
    #re:classtype:trojan-activity "(alert)(.*)" "drop\\2"

    # For compatibility, most Oinkmaster modifysid lines should work as
    # well.
    #modifysid * "^drop(.*)noalert(.*)" | "alert${1}noalert${2}"

# modify_rules:
#   - 2019401 "seconds \d+" "seconds 3600"
