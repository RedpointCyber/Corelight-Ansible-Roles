---
- name: "[suc-1] Include common role to CHECK FACTS"
  include_role:
    name: common
  vars:
    sending_role: suricata_update_config

- block:
    - name: "[suc-2] Include Lawmaker tasks"
      include_tasks: lawmaker.yml
      when:
        - lawmaker_enabled|d('false') is true

    - name: "[suc-3] Clean up local Lawmaker update.yaml"
      lineinfile:
        path: "{{ role_path }}/files/update.yaml"
        regexp: "{{ item }}"
        state: absent
      delegate_to: localhost
      changed_when: false
      loop:
        - "^local"
        - '^  - \/var\/lib\/suricata\/rules\/lm\.rules'
      when:
        - lawmaker_enabled|d('false') is true

    - name: "[suc-4] Include main-host tasks"
      include_tasks: main-host.yml
      when:
        - "starting_role|d('suricata_update_config') == 'suricata_update_config'"

    - name: "[suc-5] Include custom-rules tasks for sensor without suricata-update"
      include_tasks: custom-rules.yml
      when:
        - "starting_role|d('suricata_update_config') == 'software_sensor_config'"

  always:
    - name: "[suc-6] Include set role facts tasks"
      include_tasks: "{{ role_path }}/../common/tasks/set-role-facts.yml"
      vars:
        fact_section: suricata_update
        fact_option: config
        fact_value: success
        failed_task: none
        failed_state: absent
      when: ansible_failed_task is not defined

  rescue:
    - name: "[suc-7] Include set role failed facts tasks"
      include_tasks: "{{ role_path }}/../common/tasks/set-role-facts.yml"
      vars:
        fact_section: suricata_update
        fact_option: config
        fact_value: failed
        failed_task: "{{ ansible_failed_task.name }}"
        failed_state: present
      when: ansible_failed_task is defined

    - name: "[suc-8] Failed task"
      fail:
        msg: |
          "{{ ansible_failed_result.stderr_lines | to_nice_yaml }}"
